ARG VER_DISTRO="stretch"
FROM registry.cn-shenzhen.aliyuncs.com/infrastlabs/docker-headless:compile2 as xrdp
FROM debian:${VER_DISTRO}-slim
#FROM debian:buster-slim

#env
ARG VER_DISTRO="stretch"
ENV \
    DEBIAN_FRONTEND="noninteractive" \
    DOMAIN="mirrors.163.com" \
    VER_DISTRO=${VER_DISTRO} \
    LOC_APPS="tint2 plank thunar sakura geany rofi dunst" \
    LOC_APPS2="gnome-system-monitor engrampa ristretto" \
    LOC_XFCE="xfce4-settings xfce4-session xfwm4 xfdesktop4"

ENV \
    SSHD_PORT="10022" \
    XRDP_PORT="10089" \
    VNC_PORT="10081" \
    VNC_ENABLE="false"

# ADD ./box.sh /usr/bin/box
# RUN box
RUN \
  echo "deb http://${DOMAIN}/debian/ ${VER_DISTRO} main contrib non-free" > /etc/apt/sources.list \
  && echo "deb http://${DOMAIN}/debian/ ${VER_DISTRO}-updates main contrib non-free">> /etc/apt/sources.list \
  && echo "deb http://${DOMAIN}/debian/ ${VER_DISTRO}-backports main non-free contrib">> /etc/apt/sources.list \
  && echo "deb http://${DOMAIN}/debian-security/ ${VER_DISTRO}/updates main non-free contrib">> /etc/apt/sources.list;


# BASE: 35.254 MB
RUN apt update \
  && apt -y install --no-install-recommends \
  htop rsync tree tmux lrzsz psmisc fuse net-tools iputils-ping procps sudo iproute2 iptables \
  zip unzip xz-utils vim-tiny && \
    apt-get clean
# UTILES: 17.964 MB
# dbus-user-session(systemd) > dbus-x11
RUN apt update \
  && apt -y install --no-install-recommends \
  supervisor dbus-x11 at-spi2-core && \
  apt-get clean


# locale>xx.mo: dpkg conf, use debian's tpl.
ADD ./etc/dpkg/dpkg.cfg.d/deb-docker /etc/dpkg/dpkg.cfg.d/excludes
RUN mkdir -p /usr/share/locale/zh_CN/LC_MESSAGES;\
  echo "path-include /usr/share/locale/zh_CN/LC_MESSAGES/*" >> /etc/dpkg/dpkg.cfg.d/docker;\
  sed -i "s^path-exclude /usr/share/locale/\*^# path-exclude /usr/share/locale/\*^g" /etc/dpkg/dpkg.cfg.d/excludes;\
  cat /etc/dpkg/dpkg.cfg.d/excludes |grep locale;

# APPS: 33.493 MB; remove rofi v131(not support text/launcher.sh)
RUN apt update \
  && apt -y install --no-install-recommends ${LOC_APPS} && apt-get clean;\
  apt -y remove rofi;
# XFCE4: 3.968 MB > 13.932 MB
RUN apt update \
  && apt -y install --no-install-recommends \
  ${LOC_XFCE} greybird-gtk-theme gnome-icon-theme && apt-get clean	
# APPS2 6.767 MB
RUN apt update \
  && apt -y install --no-install-recommends ${LOC_APPS2} && apt-get clean

#XRDP,SSH 45.280 MB dropbear 2699 kB
RUN apt update \
  && apt -y install --no-install-recommends xrdp xorgxrdp dropbear && \
  mkdir -p /var/run/dbus && mkdir -p /etc/xrdp && xrdp-keygen xrdp auto && \
  apt -y remove xrdp xorgxrdp && \
    apt-get clean
#LOCALE 20.485 MB --language-pack-gnome-zh-hans 
RUN apt update\
    && apt -y install --no-install-recommends \
    dconf-cli locales tzdata apt-utils \
    fonts-wqy-zenhei && \
    apt-get clean
#AUDIO pavucontrol:2,363 kB pnmixer:815 kB;  +pulseaudio:14.6 MB/ubt:2805kB; +qmmp:28.7 MB
RUN apt update\
    && apt -y install --no-install-recommends pavucontrol pnmixer pulseaudio && apt-get clean; 

# rofi-deps: 446 kB of archives.
# RUN apt update \
#   && apt -y install --no-install-recommends \
#   libxcb-xkb1 libxkbcommon-x11-0 libxcb-ewmh2 libxcb-icccm4 libxcb-xrm0 libxcb-randr0 libxcb-xinerama0 && \
#     apt-get clean

# https://hub.fastgit.org/joserprieto/docker-debian-i18n/blob/master/Dockerfile
ARG LOC_LANG_COUNTRY="zh_CN"
ARG LOC_CODIFICATION="UTF-8"
ARG LOC_CODIFICATION_ENV="utf8"
ENV LANG=${LOC_LANG_COUNTRY}.${LOC_CODIFICATION}\
    LANGUAGE=${LOC_LANG_COUNTRY}:zh\
    LC_ALL=${LOC_LANG_COUNTRY}.${LOC_CODIFICATION}
ENV TZ="Asia/Shanghai"\
    TERM="xterm"  

# LOCALE TZ #1.786 MB
RUN localedef -i ${LOC_LANG_COUNTRY} -c -f ${LOC_CODIFICATION} -A /usr/share/locale/locale.alias ${LANG} \
  && sed -i -e "s/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/" /etc/locale.gen \
  && sed -i -e "s/# ${LANG} ${LOC_CODIFICATION}/${LANG} ${LOC_CODIFICATION}/" /etc/locale.gen \
  && ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime && echo "${TZ}" >/etc/timezone \
  && dpkg-reconfigure --frontend=noninteractive locales tzdata \
  && locale-gen ${LANG} \
  && /usr/sbin/update-locale LANG=${LANG}; \
    # /etc/default/locale
    echo "# " > /etc/default/locale; \
    echo "LANG=${LANG}" >> /etc/default/locale; \
    echo "LANGUAGE=${LANGUAGE}" >> /etc/default/locale;

# chansrv: libfdk-aac.so.1
RUN apt update\
    && apt -y install --no-install-recommends \
    libfdk-aac1 && apt-get clean; 

# cp makeIns
# COPY --from=xrdp /usr/local/sysdata/var/lib/xrdp-pulseaudio-installer /var/lib/xrdp-pulseaudio-installer_9
# COPY --from=xrdp /usr/local/sysdata_deb10/var/lib/xrdp-pulseaudio-installer /var/lib/xrdp-pulseaudio-installer_10
# COPY --from=xrdp /usr/local/sysdata/usr/lib/xorg/modules /usr/lib/xorg/modules
# COPY --from=xrdp /usr/local/sysdata/var/lib/xrdp-pulseaudio-installer /var/lib/xrdp-pulseaudio-installer
# COPY --from=xrdp /usr/local/appdata/xrdp /usr/local/xrdp
# xrdp0914
COPY --from=xrdp /usr/local/sysdata/usr/lib/xorg/modules_xrdp0914 /usr/lib/xorg/modules
COPY --from=xrdp /usr/local/sysdata/var/lib/xrdp-pulseaudio-installer /var/lib/xrdp-pulseaudio-installer_9
COPY --from=xrdp /usr/local/sysdata_deb10/var/lib/xrdp-pulseaudio-installer /var/lib/xrdp-pulseaudio-installer_10
COPY --from=xrdp /usr/local/appdata/xrdp0914 /usr/local/xrdp

# COPY --from=xrdp /usr/local/appdata/rofi /usr/local/rofi 
RUN ln -s /usr/local/xrdp/sbin/xrdp /usr/sbin/;\
  ln -s /usr/local/xrdp/sbin/xrdp-sesman /usr/sbin/;\
  ln -s /usr/local/xrdp/bin/xrdp-keygen /usr/bin/;\
  ln -s /usr/local/rofi/bin/rofi /usr/bin/;
RUN test "stretch" = "${VER_DISTRO}" && ln -s  /var/lib/xrdp-pulseaudio-installer_9  /var/lib/xrdp-pulseaudio-installer \
 || ln -s  /var/lib/xrdp-pulseaudio-installer_10  /var/lib/xrdp-pulseaudio-installer  
RUN mkdir -p /run/xrdp/sockdir && \
  chmod 3777 /var/run/xrdp/sockdir && \
  touch /etc/skel/.Xauthority

ADD box.sh /usr/bin/box
ADD supervisor.conf /etc/supervisor/conf.d/xrdp.conf
ADD entry.sh /entry.sh
ADD ./usr/share/plank /usr/share/plank
COPY --chown=root:root ./dot/ /etc/skel/

# HEADLESS
RUN box userInit headless


# DCONF+IBUS env
# dconf load / < dconf-dump.ini  ##error: Cannot autolaunch D-Bus without X11 $DISPLAY
ADD ./usr/share/dconf-dump.ini /usr/share/dconf-dump.ini 
ADD ./dot/.config/ibus/rime/default.yaml /home/headless/.config/ibus/rime/
RUN ln -s /usr/share/rime-data/wubi_pinyin.schema.yaml /home/headless/.config/ibus/rime/; \
  chown -R headless:headless /home/headless/.config/ibus; \
  # ibus env
  echo "export XMODIFIERS=@im=ibus" >> /etc/profile;\
  echo "export GTK_IM_MODULE=ibus" >> /etc/profile;\
  echo "export QT_IM_MODULE=ibus" >> /etc/profile;\
  # dconf: ibus, plank, engrampa
  mkdir -p /etc/dconf/db;\
  su - headless -c "dbus-launch dconf reset -f /; dbus-launch dconf load / < /usr/share/dconf-dump.ini; ";\
  dbus-launch dconf update; 


# gen self-signed Key: https://hub.fastgit.org/neutrinolabs/xrdp/wiki/TLS-security-layer
# openssl req -x509 -newkey rsa:2048 -nodes -keyout key.pem -out cert.pem -days 3650
RUN mkdir -p /var/run/dbus 
    # && xrdp-keygen xrdp auto
# ADD ./etc/xrdp/ /etc/xrdp/
ADD ./etc/xrdp/pulse/default.pa /etc/xrdp/pulse/default.pa
ADD ./etc/xrdp/xrdp.ini /etc/xrdp/xrdp.ini
ADD ./etc/xrdp/sesman.ini /etc/xrdp/sesman.ini
ADD ./etc/xrdp/startwm.sh /etc/xrdp/startwm.sh
RUN sed -i -e "s/ssl_protocols=TLSv1.2, TLSv1.3/ssl_protocols=TLSv1, TLSv1.1, TLSv1.2/g" /etc/xrdp/xrdp.ini;\
    sed -i "s/allow_channels=false/allow_channels=true/g" /etc/xrdp/xrdp.ini;\
    sed -i "s/DEBUG/INFO/g" /etc/xrdp/xrdp.ini;\
    sed -i "s/DEBUG/INFO/g" /etc/xrdp/sesman.ini;
# Make sesman read environment variables
RUN printf '%s\n' 'session required pam_env.so readenv=1' >> /etc/pam.d/xrdp-sesman

# dbg: xrdp@deb10 >> err: noScreen
# RUN apt -y install xauth && touch /home/headless/.Xauthority

# deb10: use apt's
RUN test "stretch" = "${VER_DISTRO}" && exit 0 \
  || rm -f /usr/sbin/xrdp && rm -f /usr/sbin/xrdp-sesman && rm -f /usr/bin/xrdp-keygen \
  && apt -y install xrdp xorgxrdp --no-install-recommends

# PS1
# \[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$
RUN PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h|'${VER_DISTRO}':\w\$ ' \
  && echo "PS1='$PS1'" >> /home/headless/.bashrc

# # Setup D-Bus
# RUN mkdir /run/dbus/ && chown messagebus:messagebus /run/dbus/
# RUN dbus-uuidgen > /etc/machine-id
# RUN ln -sf /etc/machine-id /var/lib/dbus/machine-id

#ref: lazy
ARG APP_LARGER=""
RUN box largerApps


# CMD ["supervisord", "-n"]
CMD ["/entry.sh"]
EXPOSE 10089 10022
